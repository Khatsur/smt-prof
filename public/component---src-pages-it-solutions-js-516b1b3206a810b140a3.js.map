{"version":3,"sources":["webpack:///./src/containers/it-solutions/services-area/services-area.style.js","webpack:///./src/containers/it-solutions/services-area/index.js","webpack:///./src/pages/it-solutions.js","webpack:///./src/components/box-large-image/layout-one/box-large-image.style.js","webpack:///./src/components/box-large-image/layout-one/index.js","webpack:///./src/containers/global/contact-area/contact-three/contact.style.js","webpack:///./src/containers/global/contact-area/contact-three/index.js"],"names":["SectionWrap","styled","section","device","medium","small","SectionBottom","div","ServicesArea","props","services","allItSolutionsJson","edges","serviceBoxStyles","linkStyle","headingStyle","lg","subtitle","title","map","service","md","className","key","node","id","desc","excerpt","imageSrc","image","childImageSharp","path","fields","slug","defaultProps","as","fontSize","fontweight","lineHeight","color","layout","hover","ITServicePage","pageContext","location","BoxLargeImgInner","theme","transition","BoxLargeImgMedia","BoxLargeImgBtnWrap","BoxLargeImgBtnInner","BoxLargeImgHeading","BoxLargeImgContent","HeadingWrap","Heading","TextWrap","Text","align","BoxLargeImgLink","Anchor","BoxLargeImgWrap","BoxLargeImage","boxImage","boxStyles","descStyle","buttonStyle","restStyles","fixed","alt","fluid","src","to","parse","skin","responsive","large","pl","pr","BackgroundImage","ContactInfoBox","ContactArea","conactInfoStyles","titleStyle","phoneAnchorStyle","btnStyle","contactQueryData","imageData","sectionBg","phone","contactData","siteMetadata","contact","alignitems","position","before","top","width","height","bgColor","transform","mt","ml","letterspacing","texttransform","mb","minwidth"],"mappings":"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","file":"component---src-pages-it-solutions-js-516b1b3206a810b140a3.js","sourcesContent":["import styled from \"styled-components\";\r\nimport {device} from '../../../theme'\r\n\r\nexport const SectionWrap = styled.section `\r\n    padding-top: 100px;\r\n    padding-bottom: 100px;\r\n    @media ${device.medium}{\r\n        padding-top: 80px;\r\n        padding-bottom: 80px;\r\n    }\r\n    @media ${device.small}{\r\n        padding-top: 60px;\r\n        padding-bottom: 60px;\r\n    }\r\n    .box-item{\r\n        margin-top: 60px;\r\n        @media ${device.small}{\r\n            margin-top:47px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const SectionBottom = styled.div `\r\n    margin-top: 60px;\r\n    text-align: center;\r\n    @media ${device.small}{\r\n        margin-top: 45px;\r\n    }\r\n`;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Heading from '../../../components/ui/heading'\nimport Anchor from '../../../components/ui/anchor'\nimport {Container, Row, Col} from '../../../components/ui/wrapper'\nimport SectionTitle from '../../../components/ui/section-title'\nimport ServiceBox from '../../../components/box-large-image/layout-one'\nimport {SectionWrap, SectionBottom} from './services-area.style';\n\nconst ServicesArea = (props) => {\n    const servicesDataQuery = useStaticQuery(graphql `\n        query ITSolutionsQueryData {\n            allItSolutionsJson(sort: {order: DESC, fields: id}, limit: 6) {\n                edges {\n                    node {\n                        title\n                        id\n                        excerpt\n                        fields {\n                            slug\n                        }\n                        image {\n                            childImageSharp {\n                                fluid(maxWidth: 370, maxHeight: 370, quality: 100) {\n                                    ...GatsbyImageSharpFluid_withWebp\n                                    presentationHeight\n                                    presentationWidth\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `);\n    const services = servicesDataQuery.allItSolutionsJson.edges;\n    const {serviceBoxStyles, linkStyle, headingStyle} = props;\n    return (\n        <SectionWrap>\n            <Container>\n                <Row>\n                    <Col lg={12}>\n                        <SectionTitle\n                            subtitle=\"Our Services\"\n                            title=\"For your very specific industry, <br/> we have <span>highly-tailored IT solutions.</span>\"\n                        />\n                    </Col>\n                </Row>\n                <Row>\n                    {services.map(service => (\n                        <Col lg={4} md={6} className=\"box-item\" key={service.node.id}>\n                            <ServiceBox\n                                {...serviceBoxStyles}\n                                title={service.node.title}\n                                desc={service.node.excerpt}\n                                imageSrc={service.node.image.childImageSharp}\n                                path={`/it-solution/${service.node.fields.slug}`}\n                            />\n                        </Col>\n                    ))}\n                </Row>\n                <Row>\n                    <Col lg={12}>\n                        <SectionBottom>\n                            <Heading {...headingStyle}>Challenges are just opportunities in disguise. <Anchor {...linkStyle} path=\"/\">Take the challenge!</Anchor></Heading>\n                        </SectionBottom>\n                    </Col>\n                </Row>\n            </Container>\n        </SectionWrap>\n    )\n}\n\nServicesArea.propTypes = {\n    serviceBoxStyles: PropTypes.object,\n    headingStyle: PropTypes.object,\n    linkStyle: PropTypes.object\n}\n\nServicesArea.defaultProps = {\n    headingStyle: {\n        as: 'h3',\n        fontSize: '18px',\n        fontweight: 500,\n        lineHeight: 1.40,\n        color: '#333333'\n    },\n    linkStyle: {\n        layout: 'underline',\n        hover: {\n            layout: 2\n        }\n    }\n}\n\nexport default ServicesArea;","import React from \"react\"\r\nimport SEO from \"../components/seo\"\r\nimport Layout from '../containers/layout/layout'\r\nimport Header from '../containers/layout/header/header-one'\r\nimport Footer from '../containers/layout/footer/footer-one'\r\nimport PageHeader from '../components/pageheader'\r\nimport ServicesArea from '../containers/it-solutions/services-area'\r\nimport ContactArea from '../containers/global/contact-area/contact-three'\r\n\r\nconst ITServicePage = ({ pageContext, location }) => (\r\n  <Layout location={location}>\r\n    <SEO title=\"IT Solutions\" />\r\n    <Header/>\r\n    <PageHeader \r\n        pageContext={pageContext} \r\n        location={location}\r\n        title=\"IT Solutions\"\r\n    />\r\n    <main className=\"site-wrapper-reveal\">\r\n        <ServicesArea/>\r\n        <ContactArea/>\r\n    </main>\r\n    <Footer/>\r\n  </Layout>\r\n)\r\n \r\nexport default ITServicePage\r\n ","import styled from 'styled-components';\nimport Anchor from '../../ui/anchor';\nimport Heading from '../../ui/heading';\nimport Text from '../../ui/text';\n\nexport const BoxLargeImgInner = styled.div `\n    transition: ${props => props.theme.transition};\n`;\n \nexport const BoxLargeImgMedia = styled.div `\n    position: relative;\n    border-radius: 5px;\n    overflow: hidden;  \n    text-align: center;\n    img{\n        width: 100%;\n        transition: transform 1s;\n    }\n    &:after{\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        z-index: 1;\n        opacity: .5;\n        background-image: linear-gradient(-180deg, transparent 39%, #1c0f69 100%);\n    }\n`;\n\nexport const BoxLargeImgBtnWrap = styled.div `\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    border-radius: 5px;\n    overflow: hidden;\n    z-index: 3;\n`;\n \nexport const BoxLargeImgBtnInner = styled.div `\n    background: #fff;\n    color: #086ad8;\n    transform: translateY(100%);\n    opacity: 0;\n    transition: all 0.4s ease-in-out;\n`;\n\nexport const BoxLargeImgHeading = styled.div `\n    position: absolute;\n    bottom: 30px;\n    left: 0;\n    right: 0;\n    width: 250px;\n    margin: 0 auto;\n    z-index: 2;\n    overflow: hidden;\n    transition: ${props => props.theme.transition};\n`;\n\nexport const BoxLargeImgContent = styled.div `\n    margin-top: 30px;\n`;\n\nexport const HeadingWrap = styled(Heading) `\n    font-size: ${props => props.fontSize || '24px'};\n    line-height: ${props => props.lineHeight || 1.5};\n    color: ${props => props.color || '#fff'};\n    font-weight: ${props => props.fontweight || 500};\n`;\n\nexport const TextWrap = styled(Text) `\n    color: ${props => props.color || '#7e7e7e'};\n    text-align: ${props => props.align || 'center'};\n`;\n\nexport const BoxLargeImgLink = styled(Anchor) `\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    visibility: hidden;\n    z-index: 2;\n    text-indent: -999999px;\n`;\n\nexport const BoxLargeImgWrap = styled.div `\n    max-width: 370px;\n    margin-left: auto;\n    margin-right: auto;\n    width: 100%;\n    height: 100%;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    ${BoxLargeImgInner}{\n        height: 100%;\n    }\n    &:hover{\n        ${BoxLargeImgInner}{\n            transform: translateY(-5px);\n        }\n        ${BoxLargeImgMedia}{\n            &:after{\n                background: #002fa6;\n                opacity: .8;\n            }\n        }\n        ${BoxLargeImgBtnInner}{\n            transform: translateY(0);\n            opacity: 1;\n        }\n        ${BoxLargeImgHeading}{\n            transform: translateY(-100%);\n            opacity: 0;\n        }\n        ${BoxLargeImgLink}{\n            opacity: 1;\n            visibility: visible;\n        }\n    }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport parse from 'html-react-parser';\nimport Img from 'gatsby-image'\nimport Button from '../../ui/button'\nimport Image from '../../image'\nimport {\n    BoxLargeImgWrap, \n    BoxLargeImgInner, \n    BoxLargeImgMedia,\n    BoxLargeImgBtnWrap,\n    BoxLargeImgBtnInner,\n    BoxLargeImgHeading,\n    HeadingWrap,\n    TextWrap,\n    BoxLargeImgLink,\n    BoxLargeImgContent} from './box-large-image.style'\n\nconst BoxLargeImage = ({imageSrc, title, desc, path, ...boxStyles}) => {\n    const {headingStyle, descStyle, buttonStyle, ...restStyles} = boxStyles;\n    let boxImage;\n    if(imageSrc.fixed && typeof imageSrc.fixed !== 'function'){\n        boxImage = <Img fixed={imageSrc.fixed} alt={title}/>;\n    } else if(imageSrc.fluid){\n        boxImage = <Image fluid={imageSrc.fluid} alt={title}/>\n    } else{\n        boxImage = <img src={imageSrc} alt={title}/>\n    }\n     \n    return (\n        <BoxLargeImgWrap {...restStyles}>\n            <BoxLargeImgInner>\n                {imageSrc && (\n                    <BoxLargeImgMedia>\n                        {boxImage}\n                        <BoxLargeImgBtnWrap>\n                            <BoxLargeImgBtnInner>\n                                <Button {...buttonStyle} to={path}>Learn more</Button>\n                            </BoxLargeImgBtnInner>\n                        </BoxLargeImgBtnWrap>\n                        <BoxLargeImgHeading>\n                            {title && <HeadingWrap as=\"h5\" {...headingStyle}>{title}</HeadingWrap>}\n                        </BoxLargeImgHeading>\n                        <BoxLargeImgLink path={path}>{title}</BoxLargeImgLink>\n                    </BoxLargeImgMedia>\n                )}\n                <BoxLargeImgContent>\n                    {desc && <TextWrap {...descStyle}>{parse(desc)}</TextWrap>}\n                </BoxLargeImgContent>\n            </BoxLargeImgInner>\n        </BoxLargeImgWrap>\n    )\n}\n   \nBoxLargeImage.propTypes = {\n    title: PropTypes.string,\n    imageSrc: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.object\n    ]),\n    desc: PropTypes.string,\n    headingStyle: PropTypes.object,\n    descStyle: PropTypes.object\n}\n\nBoxLargeImage.defaultProps = {\n    buttonStyle: {\n        skin: 'light',\n        color: 'primary',\n        hover: 'false',\n        responsive: {\n            large: {\n                pl: '30px',\n                pr: '30px'\n            }\n        }\n    },\n    path: \"/\"\n}\n\nexport default BoxLargeImage;\n","import styled from \"styled-components\";\r\nimport BackgroundImage from 'gatsby-background-image'\r\nimport {device} from '../../../../theme'\r\n\r\nexport const SectionWrap = styled(BackgroundImage) `\r\n    padding-top: 120px;\r\n    padding-bottom: 120px;\r\n    background-color: #002fa6;\r\n    background-size: auto !important;\r\n    background-position: top right;\r\n    &:before,\r\n    &:after{\r\n        background-size: auto !important;\r\n        background-position: top right;\r\n    }\r\n    @media ${device.medium}{\r\n        padding-top: 80px;\r\n        padding-bottom: 80px;\r\n    }\r\n`;\r\n\r\nexport const ContactInfoBox = styled.div `\r\n    text-align: center;\r\n    @media ${device.medium}{\r\n        margin-top: 45px;\r\n    }\r\n    .icon{\r\n        font-size: 40px;\r\n        color: #fff;\r\n        margin-bottom: 14px;\r\n    }\r\n`;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { MdPhone } from \"react-icons/md\";\nimport {Container, Row, Col, Box} from '../../../../components/ui/wrapper'\nimport Heading from '../../../../components/ui/heading'\nimport Text from '../../../../components/ui/text'\nimport Anchor from '../../../../components/ui/anchor'\nimport Button from '../../../../components/ui/button'\nimport {SectionWrap, ContactInfoBox} from './contact.style'\n\nconst ContactArea = ({\n    headingStyle, \n    descStyle,\n    conactInfoStyles: {\n        titleStyle,\n        phoneAnchorStyle,\n        btnStyle\n    } \n}) => {\n    const contactQueryData = useStaticQuery(graphql `\n        query {\n            sectionBg: file(relativePath: {eq: \"images/bg/contact-section-bg-2.png\"}) {\n                childImageSharp {\n                  fluid(maxWidth: 1192, maxHeight: 630, quality: 100) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n            }\n            contactData: site {\n                siteMetadata {\n                  contact {\n                    phone\n                  }\n                }\n            }\n        } \n    `);\n    const imageData = contactQueryData.sectionBg.childImageSharp.fluid;\n    const {phone} = contactQueryData.contactData.siteMetadata.contact\n    return (\n        <SectionWrap fluid={imageData}>\n            <Container>\n                <Row alignitems=\"center\">\n                    <Col lg={6}>\n                        <Box>\n                            <Heading {...headingStyle}>Obtaining further information by <span>make a contact</span> with our experienced staffs.</Heading>\n                            <Text {...descStyle}>We’re available for 8 hours a day! <br/></Text>\n                        </Box>\n                    </Col>\n                    <Col lg={6}>\n                        <ContactInfoBox>\n                            <MdPhone className=\"icon\"/>\n                            <Heading {...titleStyle}>REACH OUT NOW!</Heading>\n                            {phone && (\n                                <Heading><Anchor path=\"/\" {...phoneAnchorStyle}>{phone}</Anchor></Heading>\n                            )}\n                            <Button {...btnStyle}>Contact Us</Button>\n                        </ContactInfoBox>\n                    </Col>\n                </Row>\n            </Container>\n        </SectionWrap>\n    )\n}\n\nContactArea.propTypes = {\n    headingStyle: PropTypes.object\n}\n\nContactArea.defaultProps = {\n    headingStyle: {\n        as: 'h3',\n        position: 'relative',\n        pl: '34px',\n        fontweight: 600,\n        lineHeight: 1.4,\n        color: '#fff',\n        before: {\n            top: '50%',\n            width: '4px',\n            height: '94%',\n            bgColor: 'secondary',\n            transform: 'translateY(-50%)'\n        }\n    },\n    descStyle: {\n        mt: '15px',\n        fontSize: '18px',\n        color: '#fff',\n        ml: '34px'\n    },\n    conactInfoStyles: {\n        titleStyle: {\n            as: 'h6',\n            fontSize: '15px',\n            color: '#fff',\n            letterspacing: '2px',\n            texttransform: 'uppercase',\n            mb: '10px',\n            mt: '10px',\n        },\n        phoneAnchorStyle: {\n            color: 'secondary',\n            hover: {\n                layout: 2,\n                color: 'secondary'\n            }\n        },\n        btnStyle: {\n            mt: '20px',\n            skin: 'light',\n            minwidth: '230px',\n            color: 'primary',\n            hover: {\n                bgColor: 'secondary'\n            }\n        }\n    }\n}\n\nexport default ContactArea;"],"sourceRoot":""}